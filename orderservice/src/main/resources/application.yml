server:
  port: 8086

spring:
  application:
    name: OrderManagementService
  cloud:
    compatibility-verifier:
      enabled: false
  datasource:
    url: jdbc:sqlserver://10.3.45.15:1433;databaseName=oms_db;encrypt=true;trustServerCertificate=true;integratedSecurity=false
    username: sa
    password: root$123
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.SQLServerDialect
  main:
    web-application-type: servlet
  jackson:
    serialization:
      write-dates-as-timestamps: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: ppiriyala@nisum.com
    password: mdaalhcnaidwvmnr
    properties:
      mail:
        smtp:
          auto: true
          starttls:
            enable: true


eureka:
  client:
    service-url:
      default-zone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    hostname: localhost

# Swagger Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

logging:
  level:
    root: INFO
    com.orderservice: INFO
    com.orderservice.controller: DEBUG
    com.orderservice.service: DEBUG
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.cloud.netflix.eureka: WARN
    com.zaxxer.hikari: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
  file:
    name: logs/order-service.log
    max-size: 10MB
    max-history: 30

jwt:
  secret-key: mySecretKeyForJwtTokenThatIsLongEnough123456



# Service URLs
user:
  service:
    user:
      validation:
        url: http://localhost:8000/user/basic-info/

product:
  service:
    product:
      validation:
        url: http://localhost:8000/products/
      data:
        url: http://localhost:8000/products/
    seller:
      data:
        url: http://localhost:8000/products/

login:
  service:
    login:
      validation:
        url: http://localhost:8000/login/validate

inventory:
  service:
    inventory:
      status:
        url: http://localhost:8000/api/orders/allocate/
      update-stock:
        url: http://localhost:8000/api/orders/reserve
